{"version":3,"sources":["component/firebase.js","component/GlobalVariable.jsx","component/chat.jsx","component/create.jsx","component/home.jsx","component/join.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","provider","GoogleAuthProvider","userContext","React","createContext","initialValue","Group","user","Reducer","state","action","type","name","Chat","memo","props","useState","message","setMessage","msgs","setMsgs","db","firestore","obj","useContext","history","useHistory","uid","photoURL","scroll","useRef","Gname","URL","window","location","href","searchParams","get","getMessages","groupName","collection","orderBy","limit","onSnapshot","data","docs","reverse","map","doc","useEffect","current","scrollIntoView","behavior","useIdleTimer","timeout","onIdle","event","set","text","createdAt","FieldValue","serverTimestamp","userName","onActive","onAction","e","debounce","getRemainingTime","getLastActiveTime","className","onClick","then","push","msg","src","ref","onSubmit","preventDefault","placeholder","value","onChange","target","disabled","CreateGroup","setGroup","password","setPassword","dispatch","method","currentUser","to","pathname","search","catch","error","required","Home","menu","Fragment","signOut","signInWithPopup","result","displayName","Join","setGname","readOnly","App","useReducer","nameObj","setUid","setPhotoURL","unSubscribed","onAuthStateChanged","authUser","Provider","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.660091e4.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDqnkulSxKSky5Gsdzdo3ZBtX3mTYqfvxs\",\r\n  authDomain: \"group-chat-b978c.firebaseapp.com\",\r\n  projectId: \"group-chat-b978c\",\r\n  storageBucket: \"group-chat-b978c.appspot.com\",\r\n  messagingSenderId: \"94345118295\",\r\n  appId: \"1:94345118295:web:e31b871b0c4da0af2d1912\"\r\n};\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default firebase;","import React from \"react\";\r\n\r\nexport const userContext = React.createContext();\r\n\r\nexport const initialValue = {\r\n  Group: \"\",\r\n  user: \"\",\r\n};\r\n\r\nexport const Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"set\":\r\n      return { ...state, Group: action.name };\r\n    case \"user\":\r\n      return { ...state, user: action.user };\r\n  }\r\n};\r\n\r\n// export default Reducer;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../style/chat.css\";\r\nimport firebase from \"./firebase\";\r\nimport { userContext } from \"./GlobalVariable\";\r\nimport { useIdleTimer } from \"react-idle-timer\";\r\n\r\nconst Chat = React.memo((props) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [msgs, setMsgs] = useState([]);\r\n  const db = firebase.firestore();\r\n  const obj = useContext(userContext);\r\n  const history = useHistory();\r\n  const { uid, photoURL } = props;\r\n  const user = obj.user;\r\n  const scroll = useRef();\r\n  var url = new URL(window.location.href);\r\n  const Gname = url.searchParams.get(\"g\");\r\n\r\n  const handleInput = (e) => {\r\n    setMessage(e.target.value);\r\n    scroll.current.scrollIntoView();\r\n    // scroll.current.scrollIntoView({ behaviuor: \"smooth\" });\r\n  };\r\n\r\n  const handleMessage = (e) => {\r\n    e.preventDefault();\r\n    db.collection(`${Gname}`).doc().set({\r\n      text: message,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid: uid,\r\n      photoURL: photoURL,\r\n      userName: user,\r\n      type: \"message\",\r\n    });\r\n    setMessage(\"\");\r\n    getMessages(Gname);\r\n    // scroll.current.scrollIntoView();\r\n  };\r\n\r\n  const getMessages = (groupName) => {\r\n    db.collection(`${groupName}`)\r\n      .orderBy(\"createdAt\", \"desc\")\r\n      .limit(50)\r\n      .onSnapshot((data) => {\r\n        setMsgs(data.docs.reverse().map((doc) => doc.data()));\r\n      });\r\n    // scroll.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let url2 = new URL(window.location.href);\r\n    let groupName = url2.searchParams.get(\"g\");\r\n    getMessages(groupName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scroll.current.scrollIntoView({ behavior: \"smooth\" });\r\n  });\r\n\r\n  const handleExit = () => {\r\n    db.collection(`${Gname}`)\r\n      .doc()\r\n      .set({\r\n        text: `${user} leave the chat`,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid: uid,\r\n        photoURL: photoURL,\r\n        userName: user,\r\n        type: \"entry\",\r\n      })\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      });\r\n  };\r\n\r\n  const handleOnIdle = (event) => {\r\n    db.collection(`${Gname}`)\r\n      .doc()\r\n      .set({\r\n        text: `${user} is idle`,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid: uid,\r\n        photoURL: photoURL,\r\n        userName: user,\r\n        type: \"entry\",\r\n      });\r\n    // history.push(\"/\");\r\n  };\r\n\r\n  const handleOnActive = (event) => {\r\n    db.collection(`${Gname}`)\r\n      .doc()\r\n      .set({\r\n        text: `${user} is active`,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid: uid,\r\n        photoURL: photoURL,\r\n        userName: user,\r\n        type: \"entry\",\r\n      });\r\n    // scroll.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleOnAction = (e) => {\r\n    // console.log(\"user did something\", e);\r\n  };\r\n\r\n  const { getRemainingTime, getLastActiveTime } = useIdleTimer({\r\n    timeout: 1000 * 60,\r\n    onIdle: handleOnIdle,\r\n    onActive: handleOnActive,\r\n    onAction: handleOnAction,\r\n    debounce: 500,\r\n  });\r\n\r\n  // console.log(\"component updating\");\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <div>\r\n          <div>\r\n            <div className=\"chat-header\">\r\n              <h2 className=\"chat-title\">Messages</h2>\r\n              <div className=\"chat-close\" onClick={handleExit}>\r\n                &#10539;\r\n              </div>\r\n            </div>\r\n            <div className=\"chat-container\">\r\n              {msgs?.map((msg) => {\r\n                if (msg?.uid == uid && msg?.type == \"message\") {\r\n                  return (\r\n                    <div className=\"sender\" key={msg?.createdAt}>\r\n                      <div className=\"chat-profile-right\">\r\n                        <h3 className=\"chat-profile-userName\">You</h3>\r\n                        <img\r\n                          src={msg.photoURL}\r\n                          className=\"chat-profile-image-right\"\r\n                        ></img>\r\n                      </div>\r\n                      <p>{msg?.text}</p>\r\n                    </div>\r\n                  );\r\n                } else if (msg?.type == \"entry\") {\r\n                  return (\r\n                    <div className=\"chat-user-entry\" key={msg?.createdAt}>\r\n                      <p>{msg.text}</p>\r\n                    </div>\r\n                  );\r\n                } else if (msg?.type == \"message\") {\r\n                  return (\r\n                    <div className=\"receiver\" key={msg?.createdAt}>\r\n                      <div className=\"chat-profile-left\">\r\n                        <img\r\n                          src={msg.photoURL}\r\n                          className=\"chat-profile-image-left\"\r\n                        ></img>\r\n                        <h3 className=\"chat-profile-userName\">\r\n                          {msg.userName}\r\n                        </h3>\r\n                      </div>\r\n                      <p>{msg.text}</p>\r\n                    </div>\r\n                  );\r\n                }\r\n              })}\r\n              <div ref={scroll}></div>\r\n            </div>\r\n            <div className=\"chat-send\">\r\n              <form onSubmit={handleMessage}>\r\n                <input\r\n                  placeholder=\"Message...\"\r\n                  value={message}\r\n                  onChange={handleInput}\r\n                ></input>\r\n                <button disabled={!message} type=\"submit\">\r\n                  Send\r\n                </button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Chat;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport \"../style/create.css\";\r\nimport firebase from \"./firebase\";\r\nimport { userContext } from \"./GlobalVariable\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { auth } from \"./firebase\";\r\n\r\nconst CreateGroup = () => {\r\n  const db = firebase.firestore();\r\n\r\n  const history = useHistory();\r\n  const [groupName, setGroup] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const obj = useContext(userContext);\r\n  const user = obj.user;\r\n  const dispatch = obj.method;\r\n  const { uid, photoURL } = auth.currentUser;\r\n\r\n  // console.log(auth.currentUser);\r\n  // console.log(uid);\r\n  // console.log(photoURL);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"group created \" + groupName);\r\n    dispatch({\r\n      type: \"set\",\r\n      name: groupName,\r\n    });\r\n\r\n    db.collection(`${groupName}`)\r\n      .doc()\r\n      .set({\r\n        text: `${user} Joined the Chat`,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid: uid,\r\n        photoURL: photoURL,\r\n        userName: user,\r\n        type: \"entry\",\r\n      })\r\n      .then(() => {\r\n        // console.log(\"Document successfully written!\");\r\n        db.collection(`${groupName}`).doc(\"password\").set({\r\n          text: password,\r\n          createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n          uid: uid,\r\n          photoURL: photoURL,\r\n          userName: user,\r\n          type: \"password\",\r\n        });\r\n        history.push({\r\n          pathname: \"/2XyllSDfepoe142197f5273865770be44723c2a5df\",\r\n          search: \"?g=\" + groupName,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <div className=\"create-container\">\r\n          <div className=\"create-home\">\r\n            <Link to=\"/\" className=\"create-home-btn\">\r\n              <HomeIcon></HomeIcon>\r\n            </Link>\r\n          </div>\r\n          <h2>Make a Group Chat</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Create a Room\"\r\n              required\r\n              name=\"roomName\"\r\n              value={groupName}\r\n              onChange={(e) => setGroup(e.target.value)}\r\n            ></input>\r\n            <br></br>\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              required\r\n              name=\"password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n            <br></br>\r\n            <button type=\"submit\" disabled=\"\">\r\n              Create\r\n            </button>\r\n          </form>\r\n          <small className=\"note\">\r\n            Note: Create a Room & Share Your Room name to your friends.\r\n          </small>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateGroup;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Create from \"./create\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { provider, auth } from \"./firebase\";\r\nimport { userContext } from \"./GlobalVariable\";\r\n\r\nimport \"../style/home.css\";\r\n\r\nconst Home = (props) => {\r\n  const user = props.user;\r\n  const obj = useContext(userContext);\r\n  const dispatch = obj.method;\r\n  const history = useHistory();\r\n\r\n  // console.log(user);\r\n\r\n  const handleGoogleSignIn = () => {\r\n    auth.signInWithPopup(provider).then((result) => {\r\n      let userName = result.user.displayName;\r\n      dispatch({\r\n        type: \"user\",\r\n        user: userName,\r\n      });\r\n    });\r\n  };\r\n\r\n  const handleGoogleSignOut = () => {\r\n    auth.signOut();\r\n  };\r\n\r\n  var menu = (\r\n    <div>\r\n      <section>\r\n        <div className=\"home-container\">\r\n          <div className=\"home-title\">\r\n            <h2>Group Chat</h2>\r\n          </div>\r\n          {user ? (\r\n            <React.Fragment>\r\n              <div>\r\n                <button onClick={() => history.push(\"/create\")}>\r\n                  Create Group\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button onClick={() => history.push(\"/join\")}>\r\n                  Join Group\r\n                </button>\r\n              </div>\r\n              <div>\r\n                <button onClick={handleGoogleSignOut}>Sign Out</button>\r\n              </div>\r\n            </React.Fragment>\r\n          ) : (\r\n            <div>\r\n              <button onClick={handleGoogleSignIn}>Sign In with Google</button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n  return <div>{menu}</div>;\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { userContext } from \"./GlobalVariable\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport firebase from \"./firebase\";\r\nimport { auth } from \"./firebase\";\r\n\r\nconst Join = () => {\r\n  const db = firebase.firestore();\r\n  const history = useHistory();\r\n  const obj = useContext(userContext);\r\n  const dispatch = obj.method;\r\n  const user = obj.user;\r\n  const [Gname, setGname] = useState(\"\");\r\n  const { uid, photoURL } = auth.currentUser;\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"set\",\r\n      name: Gname,\r\n    });\r\n\r\n    db.collection(`${Gname}`)\r\n      .doc()\r\n      .set({\r\n        text: `${user} joined the chat`,\r\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        uid: uid,\r\n        photoURL: photoURL,\r\n        userName: user,\r\n        type: \"entry\",\r\n      })\r\n      .then(() => {\r\n        // console.log(\"Document successfully written!\");\r\n        // history.push(\"/2XyllSDfepoe142197f5273865770be44723c2a5df\");\r\n        history.push({\r\n          pathname: \"/2XyllSDfepoe142197f5273865770be44723c2a5df\",\r\n          search: \"?g=\" + Gname,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        // console.error(\"Error writing document: \", error);\r\n      });\r\n  };\r\n  return (\r\n    <div>\r\n      <section>\r\n        <div className=\"create-container\">\r\n          <div className=\"create-home\">\r\n            <Link to=\"/\" className=\"create-home-btn\">\r\n              <HomeIcon></HomeIcon>\r\n            </Link>\r\n          </div>\r\n          <h2>Join Group Chat</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Group Name\"\r\n              required\r\n              name=\"roomName\"\r\n              onChange={(e) => setGname(e.target.value)}\r\n            ></input>\r\n            <br></br>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter Your Name\"\r\n              required\r\n              value={user}\r\n              readOnly={true}\r\n            ></input>\r\n            <br></br>\r\n            <button type=\"submit\" disabled=\"\">\r\n              Join\r\n            </button>\r\n          </form>\r\n          <small className=\"note\">\r\n            Note: Create a Room & Share a url link to your friends.\r\n          </small>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","// import \"./App.css\";\nimport Chat from \"./component/chat\";\nimport Home from \"./component/home\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { userContext, initialValue, Reducer} from \"./component/GlobalVariable\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport CreateGroup from \"./component/create\";\nimport Join from \"./component/join\";\n\nimport { auth } from \"./component/firebase\";\n\n\nfunction App() {\n  const [nameObj, dispatch] = useReducer(Reducer, initialValue);\n  const { Group, user } = nameObj;\n  const [ uid, setUid] = useState(\"\");\n  const [ photoURL, setPhotoURL] = useState(\"\");\n\n  useEffect(() => {\n    const unSubscribed = auth.onAuthStateChanged((authUser) => {\n      if(authUser) {\n        setUid(authUser.uid);\n        setPhotoURL(authUser.photoURL);\n        // console.log(\"user logged in\");\n        //logged in\n        dispatch({\n          type: \"user\",\n          user: authUser.displayName,\n        })      \n      }\n      else {\n        // logged out\n        // console.log(\"user logged out\");\n\n        dispatch({\n          type: \"user\",\n          user: null,\n        })    \n      }\n      return (() => {\n        unSubscribed();\n      })\n    })\n  }, [])\n  return (\n    <Router>\n      <userContext.Provider value={{ name: Group, method: dispatch, user: user}}>\n      <div className=\"App\">        \n        <Switch>\n          <Route path=\"/create\">\n            <CreateGroup />\n          </Route>\n          <Route path=\"/join\">\n            <Join />\n          </Route>\n          <Route path=\"/2XyllSDfepoe142197f5273865770be44723c2a5df\">\n            <Chat uid={uid} photoURL={photoURL} Gname={Group}/>\n          </Route>\n          <Route path=\"/\">\n              <Home  user={user}/>\n          </Route>\n        </Switch>\n        {/* <Home /> */}\n      </div>\n      </userContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}